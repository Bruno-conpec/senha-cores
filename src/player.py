#!/usr/bin/env python3
from colors import *
from random import sample, choice

# Cores disponíveis para o palpite
colors = [RED, GREEN, BLUE, YELLOW, ORANGE, BLACK, WHITE]
apostas = []


def checagem(retorno, guess_hist):
    if retorno not in guess_hist:
        return True
    return False


def zero_acerto(guess_hist, res_hist):
    lista = sample(colors, 4)
    print("Guess generated by player function:", lista)
    if checagem(lista, guess_hist):
        return lista
    # refazer se checagem == False


def um_acerto(guess_hist, res_hist):
    while True:
        aposta = choice(colors)
        if aposta not in apostas:
            apostas.append(aposta)
            break
    lista = [x for x in colors if x not in guess_hist[-1]]
    lista.append(aposta)
    print("Guess generated by player function:", lista)
    if checagem(lista, guess_hist):
        return lista
    # refazer se checagem == False


def dois_acerto(guess_hist, res_hist):
    while True:
        aposta = sample(colors, 2)
        if aposta[0] != apostas[-1]:
            apostas.append(aposta[0])
            if aposta[1] != apostas[-2]:
                apostas.append(aposta[1])
                break
            del apostas[-1]
    lista = [x for x in colors if x not in guess_hist[-1]]
    lista[-1] = aposta[-1]
    lista.append(aposta[-2])
    print("Guess generated by player function:", lista)
    if checagem(lista, guess_hist):
        return lista
    # refazer se checagem == False


def tres_acerto(guess_hist, res_hist):
    ultima_tentativa = set(
        guess_hist[-1]
    )  # analisar se vale a pena fazer com set ou com lista e padronizar ao longo do código
    apostas.append(choice(ultima_tentativa))
    while True:
        aposta = choice(colors)
        if aposta != apostas[-1]:
            apostas.append(aposta)
            break
    ultima_tentativa.remove(apostas[-2])
    ultima_tentativa.add(apostas[-1])
    lista = list(ultima_tentativa)
    print("Guess generated by player function:", lista)
    if checagem(lista, guess_hist):
        return lista
    # refazer se checagem == False


def player(guess_hist, res_hist):
    try:
        match res_hist[-1][0]:
            case 0:
                return zero_acerto(guess_hist, res_hist)
            case 1:
                return um_acerto(guess_hist, res_hist)
            case 2:
                return dois_acerto(guess_hist, res_hist)
            case 3:
                return tres_acerto(guess_hist, res_hist)
            # case 4: bruno salles
    except:
        return zero_acerto(guess_hist, res_hist)
